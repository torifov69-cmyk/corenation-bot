import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
BOT_TOKEN = os.environ.get('BOT_TOKEN')
MAIN_CHANNEL_LINK = "https://t.me/+T2xIp-BByFYzYWNi"

if not BOT_TOKEN:
    logging.error("BOT_TOKEN not set!")
    exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("üíª –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª CoreNation", url=MAIN_CHANNEL_LINK)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **CoreNation Bot**!\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º!\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª üëá"
    )

    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def handle_message(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("üíª –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª CoreNation", url=MAIN_CHANNEL_LINK)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª üëá",
        reply_markup=reply_markup
    )

async def help_command(update: Update, context: CallbackContext) -> None:
    help_text = (
        "ü§ñ CoreNation Bot - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/channel - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ\n\n"
        "–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é."
    )

    keyboard = [
        [InlineKeyboardButton("üíª –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=MAIN_CHANNEL_LINK)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(help_text, reply_markup=reply_markup)

async def channel_command(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("üíª –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª CoreNation", url=MAIN_CHANNEL_LINK)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    channel_text = (
        "üíª **CoreNation With Love**\n\n"
        "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É —Å –ª—é–±–æ–≤—å—é!\n"
        "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n"
        "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –∏ –±—É–¥—å—Ç–µ —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞! üëá"
    )

    await update.message.reply_text(channel_text, reply_markup=reply_markup)

def main() -> None:
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("channel", channel_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç @corenation_bot –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render!")
    print("üîó –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤:", MAIN_CHANNEL_LINK)
    application.run_polling()

if __name__ == "__main__":
    main()